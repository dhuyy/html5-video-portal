{"version":3,"sources":["scripts/app.js"],"names":["angular","module","setTimeout","bootstrap","document","VideoService","$http","SERVER","getVideos","sessionId","skip","limit","method","url","ADDRESS","headers","Content-Type","params","getVideo","videoId","rateVideo","rating","data","factory","$inject","videoPlayer","bindings","name","description","controller","$scope","$element","$rootScope","previousRate","this","$onInit","video","element","find","on","forEach","current","get","id","pause","$onChanges","concat","onRatingClick","videoRating","$emit","templateUrl","component","videoBlock","restrict","bindToController","ratings","scope","average","array","sum","reduce","total","num","length","round","value","step","inv","Math","setVideoRating","averageRate","$ctrl","setVideoUrl","goToVideoDetail","onInit","controllerAs","link","el","onPlayVideo","directive","crossoverNavbar","isLogged","onClickLogout","loadingScreen","$animate","attributes","enabled","leave","children","eq","then","remove","AuthService","md5","localStorageService","auth","username","password","createHash","logout","getSessionId","VideoListController","$timeout","$state","toastr","vm","videos","NUMBER_VIDEOS_TO_LOAD","response","showSpinner","SHOULD_INIT_SCROLLMONITOR","initScrollMonitor","error","go","scrollMonitor","create","getElementById","enterViewport","VideoDetailController","$stateParams","filter","_id","results","showMoreSideVideos","LoginController","status","set","truncateDescription","input","substring","runBlock","onStateChangeSuccess","$on","event","toState","permission","onLogout","onClickDetailVideo","args","success","run","routerConfig","$stateProvider","$urlRouterProvider","state","otherwise","config","constant","toastrConfig","localStorageServiceProvider","setPrefix","setDefaultToCookie","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","closeButton","$templateCache","put"],"mappings":"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","file":"scripts/app-9502e32ff5.js","sourcesContent":["/* eslint angular/timeout-service: 0 */\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment', [\n      'ngAnimate',\n      'ngSanitize',\n      'ngMessages',\n      'LocalStorageModule',\n      'angular-input-stars',\n      'ngAria',\n      'ui.router',\n      'angular-md5',\n      'toastr'\n    ]);\n\n  /**\n   * This timeout delays the bootstrap of the application in 2 seconds in order to show the loading animation,\n   * simulating the loading of the application on the internet.\n   */\n  setTimeout(function() {\n    angular.bootstrap(document, ['crossoverAssignment']);\n  }, 2000);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .factory('VideoService', VideoService);\n\n  /** @ngInject */\n  function VideoService($http, SERVER) {\n    var factory = {\n      getVideos: getVideos,\n      getVideo: getVideo,\n      rateVideo: rateVideo\n    };\n    return factory;\n\n    function getVideos(sessionId, skip, limit) {\n      return $http({\n        method: 'GET',\n        url: SERVER.ADDRESS + '/videos',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: {\n          sessionId: sessionId,\n          skip: skip,\n          limit: limit\n        }\n      })\n    }\n\n    function getVideo(sessionId, videoId) {\n      return $http({\n        method: 'GET',\n        url: SERVER.ADDRESS + '/video',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: {\n          sessionId: sessionId,\n          videoId: videoId\n        }\n      })\n    }\n\n    function rateVideo(sessionId, videoId, rating) {\n      return $http({\n        method: 'POST',\n        url: SERVER.ADDRESS + '/video/ratings',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: {\n          sessionId: sessionId\n        },\n        data: {\n          videoId: videoId,\n          rating: rating\n        }\n      })\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  /** @ngInject */\n  var videoPlayer = {\n    bindings: {\n      videoId: '@',\n      name: '@',\n      description: '@',\n      url: '<'\n    },\n    controller: function ($scope, $element, $rootScope, SERVER) {\n      var previousRate = null;\n\n      this.$onInit = function() {\n        var video = angular.element($element).find('video');\n\n        /**\n         * This listener runs when a video starts to play and pauses all others from the page.\n         */\n        video.on('play', function() {\n          angular.forEach(angular.element('video'),\n            function(current) {\n              if (video.get(0).id != current.id)\n                current.pause();\n            });\n        });\n      };\n\n      this.$onChanges = function () {\n        /**\n         * Concatenation of the the server address with the video path.\n         * @type {string}\n         */\n        this.url = SERVER.ADDRESS.concat('/', this.url);\n      };\n\n      /**\n       * This method makes sure that \"videoRating\" parameter will not be 0.\n       */\n      this.onRatingClick = function() {\n        if ($scope.videoRating == 0)\n          $scope.videoRating = previousRate;\n\n        previousRate = $scope.videoRating;\n\n        /**\n         * This code triggers the event \"onRatingClick\" passing \"videoId\" and \"rating\" as parameters.\n         */\n        $rootScope.$emit('onRatingClick', {\n          videoId: this.videoId,\n          rating: $scope.videoRating\n        });\n      }\n    },\n    templateUrl: 'app/components/videoPlayer/videoPlayer.html'\n  };\n\n  angular\n    .module('crossoverAssignment')\n    .component('videoPlayer', videoPlayer);\n\n})();\n\n/* eslint no-unused-vars: 0 */\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .directive('videoBlock', videoBlock);\n\n  /** @ngInject */\n  function videoBlock(SERVER) {\n    return {\n      restrict: 'E',\n      bindToController: {\n        videoId: '@',\n        name: '@',\n        description: '@',\n        url: '<',\n        ratings: '<'\n      },\n      scope: {},\n      controller: function($scope, $rootScope) {\n        var $ctrl = this;\n\n        $ctrl.average = average;\n        $ctrl.round = round;\n\n        /**\n         * This method returns the average of an array of numbers.\n         * @param array\n         * @returns {number}\n         */\n        function average(array) {\n          var sum = array.reduce(function(total, num) {\n            return total + num;\n          });\n\n          return sum / array.length;\n        }\n\n        /**\n         * This method rounds a value based on the \"step\" parameter.\n         * @param value\n         * @param step\n         * @returns {number}\n         */\n        function round(value, step) {\n          step || (step = 1.0);\n          var inv = 1.0 / step;\n\n          return Math.round(value * inv) / inv;\n        }\n\n        /**\n         * This method assigns the \"averageRate\" variable the value of the \"ratings\" variable after it has been\n         * processed by the \"average\" and \"round\" methods.\n         */\n        function setVideoRating() {\n          $scope.averageRate =\n            round(average($ctrl.ratings), 0.5);\n        }\n\n        /**\n         * This method concatenates the server address with the video path.\n         */\n        function setVideoUrl() {\n          $ctrl.url = SERVER.ADDRESS.concat('/', $ctrl.url);\n        }\n\n        /**\n         * This code triggers the event \"onClickDetailVideo\" passing \"videoId\" as parameter.\n         */\n        $ctrl.goToVideoDetail = function() {\n          $rootScope.$emit('onClickDetailVideo', $ctrl.videoId)\n        };\n\n        /**\n         * This method runs at template initialization and calls \"setVideoRating\" and \"setVideoUrl\" methods.\n         */\n        $ctrl.onInit = function() {\n          setVideoRating();\n          setVideoUrl();\n        }\n      },\n      controllerAs: '$ctrl',\n      templateUrl: 'app/components/videoBlock/videoBlock.html',\n      link: function(scope, el) {\n        /**\n         * This method register a listener to run when a video starts to play and pauses all others from the page.\n         */\n        function onPlayVideo() {\n          var video = angular.element(el).find('video');\n\n          video.on('play', function() {\n            angular.forEach(angular.element('video'),\n              function(current) {\n                if (video.get(0).id != current.id)\n                current.pause();\n              });\n          });\n        }\n\n        (function onInit() {\n          onPlayVideo()\n        })();\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  /** @ngInject */\n  var crossoverNavbar = {\n    bindings: {\n      isLogged: '<'\n    },\n    controller: function ($rootScope) {\n      /**\n       * This code triggers the event \"logout\" to log out an user.\n       */\n      function onClickLogout() {\n        $rootScope.$emit('logout');\n      }\n\n      this.onClickLogout = onClickLogout;\n    },\n    templateUrl: 'app/components/navbar/navbar.html'\n  };\n\n  angular\n    .module('crossoverAssignment')\n    .component('crossoverNavbar', crossoverNavbar);\n\n})();\n\n/* eslint no-unused-vars: 0 */\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .directive('loadingScreen', loadingScreen);\n\n  /** @ngInject */\n  function loadingScreen($animate) {\n    var directive = {\n      restrict: 'C',\n      link: function(scope, element, attributes) {\n        $animate.enabled(true);\n\n        /**\n         * This listener removes the DOM element and clears its state.\n         */\n        $animate.leave(element.children().eq(0)).then( function() {\n          element.remove();\n          scope = element = attributes = null;\n          $animate.enabled(false);\n        });\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .factory('AuthService', AuthService);\n\n  /** @ngInject */\n  function AuthService($http, md5, SERVER, localStorageService) {\n    var factory = {\n      auth: auth,\n      logout: logout,\n      getSessionId: getSessionId\n    };\n    return factory;\n\n    function auth(username, password) {\n      return $http({\n        method: 'POST',\n        url: SERVER.ADDRESS + '/user/auth',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          username: username,\n          password: md5.createHash(password)\n        }\n      })\n    }\n\n    function logout(sessionId) {\n      return $http({\n        method: 'GET',\n        url: SERVER.ADDRESS + '/user/logout',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: { sessionId: sessionId }\n      })\n    }\n\n    function getSessionId() {\n      return localStorageService.get('sessionId');\n    }\n  }\n})();\n\n/* eslint no-undef: 0, angular/document-service: 0 */\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .controller('VideoListController', VideoListController);\n\n  /** @ngInject */\n  function VideoListController($timeout, $state, toastr, AuthService, VideoService) {\n    var vm = this;\n\n    var NUMBER_VIDEOS_TO_LOAD = 10;\n    var SHOULD_INIT_SCROLLMONITOR = true;\n\n    vm.videos = [];\n    vm.showSpinner = false;\n\n    vm.onInit = onInit;\n    vm.getVideos = getVideos;\n\n    /**\n     * This method runs at template initialization and loads the first videos.\n     */\n    function onInit() {\n      vm.getVideos(AuthService.getSessionId(), vm.videos.length, NUMBER_VIDEOS_TO_LOAD);\n    }\n\n    /**\n     * This method accesses the server to load a set of videos based on the \"skip\" and \"limit\" params.\n     * @param sessionId\n     * @param skip\n     * @param limit\n     */\n    function getVideos(sessionId, skip, limit) {\n      VideoService.getVideos(sessionId, skip, limit)\n        .then(function(response) {\n          vm.videos = vm.videos.concat(response.data.data);\n\n          vm.showSpinner = false;\n\n          if (SHOULD_INIT_SCROLLMONITOR) {\n            $timeout(function() {\n              initScrollMonitor();\n            });\n\n            SHOULD_INIT_SCROLLMONITOR = false;\n          }\n        })\n        .catch(function() {\n          toastr.error(null, 'Could not load videos.');\n\n          $state.go('login')\n        })\n      ;\n    }\n\n    /**\n     * This method initializes and configures the \"scrollMonitor\" module to allow loading videos as the user scroll down\n     * the page (lazy loading feature).\n     */\n    function initScrollMonitor() {\n      scrollMonitor\n        .create(document.getElementById('video-list-end'))\n        .enterViewport(function() {\n          if (vm.videos.length < 101) {\n            vm.showSpinner = true;\n            vm.getVideos(AuthService.getSessionId(), vm.videos.length, NUMBER_VIDEOS_TO_LOAD);\n          }\n        })\n      ;\n    }\n  }\n})();\n\n/* eslint angular/on-watch: 0 */\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .controller('VideoDetailController', VideoDetailController);\n\n  /** @ngInject */\n  function VideoDetailController($stateParams, toastr, VideoService, AuthService) {\n    var vm = this;\n\n    var NUMBER_VIDEOS_TO_LOAD = 5;\n\n    vm.video = null;\n    vm.videos = [];\n    vm.results = [];\n\n    vm.onInit = onInit;\n    vm.getVideo = getVideo;\n    vm.getVideos = getVideos;\n    vm.showMoreSideVideos = showMoreSideVideos;\n\n    /**\n     * This method runs at template initialization and loads the current video based on the \"id\" url param.\n     */\n    function onInit() {\n      vm.getVideo(AuthService.getSessionId(), $stateParams.id);\n    }\n\n    /**\n     * This method accesses the server to load one video based on the videoId param.\n     * @param sessionId\n     * @param videoId\n     */\n    function getVideo(sessionId, videoId) {\n      VideoService.getVideo(sessionId, videoId)\n        .then(function(response) {\n          vm.video = response.data.data;\n\n          vm.getVideos(AuthService.getSessionId(), vm.videos.length, NUMBER_VIDEOS_TO_LOAD);\n        })\n        .catch(function() {\n          toastr.error(null, 'Could not load video '.concat(videoId, '.'));\n        })\n      ;\n    }\n\n    /**\n     * This method accesses the server to load a set of videos based on the \"skip\" and \"limit\" params.\n     * @param sessionId\n     * @param skip\n     * @param limit\n     */\n    function getVideos(sessionId, skip, limit) {\n      VideoService.getVideos(sessionId, skip, limit)\n        .then(function(response) {\n          var data = response.data.data;\n\n          vm.videos = vm.videos.concat(data);\n\n          data = data.filter(function(element) {\n            return element._id != vm.video._id;\n          });\n\n          vm.results = vm.results.concat(data);\n        })\n        .catch(function() {\n          toastr.error(null, 'Could not load videos.');\n        })\n      ;\n    }\n\n    /**\n     * This method triggers when the user clicks the \"Show More\" button and accesses the \"getVideos\" method to load\n     * more videos from the server.\n     */\n    function showMoreSideVideos() {\n      vm.getVideos(AuthService.getSessionId(), vm.videos.length, NUMBER_VIDEOS_TO_LOAD);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController($state, AuthService, toastr, localStorageService) {\n    var vm = this;\n\n    vm.auth = auth;\n\n    /**\n     * This method requests the server to authenticate a user based on the \"username\" and \"password\" params.\n     * @param username\n     * @param password\n     */\n    function auth(username, password) {\n      AuthService.auth(username, password)\n        .then(function(response) {\n          if (response.data.status == 'error') {\n            toastr.error(null, response.data.error);\n          } else {\n            localStorageService.set('sessionId', response.data.sessionId);\n\n            $state.go('videoList');\n          }\n        })\n        .catch(function() {\n          toastr.error(null, 'Could not connect to server. Try again later.');\n        })\n      ;\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .filter('truncateDescription', truncateDescription);\n\n  /**\n   * This filter crops the string parameter to 85 characters and adds the string \"...\" to the end.\n   * @returns {Function}\n   */\n  function truncateDescription() {\n    return function(input) {\n      return input.substring(0, 85).concat('...');\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($state, $rootScope, toastr, localStorageService, AuthService, VideoService) {\n    /**\n     * All the \"$on\" calls here is assigned to a variable, in order to be destroyed during the $destroy event.\n     */\n\n    /**\n     * This listener is triggered when a state changes and checks for routes that are private. If there is no sessionId\n     * stored in the local storage the user is redirected to the Log In page.\n     */\n    var onStateChangeSuccess = $rootScope.$on('$stateChangeSuccess',\n      function(event, toState) {\n        if ((toState.permission === 'private') && (!localStorageService.get('sessionId'))) {\n          $state.go('login');\n\n          toastr.error(null, 'Not authorized. Try to sign in again.');\n        }\n      })\n    ;\n    $rootScope.$on('$destroy', onStateChangeSuccess);\n\n    /**\n     * This method returns whether there is a sessionId in local storage.\n     * @returns {boolean}\n     */\n    $rootScope.isLogged = function() {\n      return !!localStorageService.get('sessionId');\n    };\n\n    /**\n     * This listener requests the log out to the server. Removing the sessionId from local storage and redirecting to the\n     * login page.\n     */\n    var onLogout = $rootScope.$on('logout', function() {\n      AuthService.logout(AuthService.getSessionId())\n        .then(function() {\n          localStorageService.remove('sessionId');\n\n          $state.go('login');\n        })\n      ;\n    });\n    $rootScope.$on('$destroy', onLogout);\n\n    /**\n     * This listener executes when the \"onClickDetailVideo\" event is fired and redirects to the video detail page by\n     * passing the video id as parameter.\n     */\n    var onClickDetailVideo = $rootScope.$on('onClickDetailVideo', function(event, args) {\n      $state.go('videoDetail', { 'id': args });\n    });\n    $rootScope.$on('$destroy', onClickDetailVideo);\n\n    /**\n     * This listener executes when the \"onRatingClick\" event is triggered and requests the server to evaluate the video\n     * passed as parameter.\n     */\n    var onRatingClick = $rootScope.$on('onRatingClick', function(event, args) {\n      VideoService.rateVideo(AuthService.getSessionId(), args.videoId, args.rating)\n        .then(function() {\n          toastr.success(null, 'Vídeo rated.');\n        })\n        .catch(function() {\n          toastr.error(null, 'Could not rate this video.');\n        })\n      ;\n    });\n    $rootScope.$on('$destroy', onRatingClick);\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('login', {\n        url: '/login',\n        templateUrl: 'app/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'vm',\n        permission: 'public'\n      })\n      .state('videoList', {\n        url: '/videoList',\n        templateUrl: 'app/videoList/videoList.html',\n        controller: 'VideoListController',\n        controllerAs: 'vm',\n        permission: 'private'\n      })\n      .state('videoDetail', {\n        url: '/videoDetail/:id',\n        templateUrl: 'app/videoDetail/videoDetail.html',\n        controller: 'VideoDetailController',\n        controllerAs: 'vm',\n        permission: 'private'\n      });\n\n    $urlRouterProvider.otherwise('/login');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .constant('SERVER', {\n      'ADDRESS': 'https://crossover-assignment-angular.herokuapp.com'\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('crossoverAssignment')\n    .config(config);\n\n  /** @ngInject */\n  function config(toastrConfig, localStorageServiceProvider) {\n    /**\n     * Set prefix to avoid overwriting any local storage variables.\n     */\n    localStorageServiceProvider.setPrefix('crossOver');\n\n    /**\n     * Disable using cookies as default if localStorage is not supported.\n     */\n    localStorageServiceProvider.setDefaultToCookie(false);\n\n    /**\n     * These properties below set the options for the \"toastr\" notification module.\n     */\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 2000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = false;\n    toastrConfig.progressBar = true;\n    toastrConfig.closeButton = true;\n\n  }\n\n})();\n\nangular.module(\"crossoverAssignment\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<div class=login-page><div class=account-wall><img class=profile-img src=../../assets/images/avatar.png alt=\\\"\\\"><form class=form-login ng-submit=\\\"vm.auth(vm.username, vm.password)\\\"><input type=text class=form-control placeholder=Username ng-model=vm.username required autofocus> <input type=password class=form-control placeholder=Password ng-model=vm.password required> <input type=submit class=\\\"btn btn-lg btn-info btn-block btn-login\\\" value=\\\"Sign In\\\"></form></div></div>\");\n$templateCache.put(\"app/videoDetail/videoDetail.html\",\"<div class=\\\"video-detail-page container-fluid\\\" ng-init=vm.onInit()><div class=row><div class=\\\"col-xs-12 col-sm-8\\\"><div class=video-player-wrapper><video-player video-id=\\\"{{ vm.video._id }}\\\" name=\\\"{{ vm.video.name }}\\\" description=\\\"{{ vm.video.description }}\\\" url=vm.video.url></video-player></div></div><div class=\\\"col-xs-12 col-sm-4\\\"><hr class=\\\"separator visible-xs-block\\\"><div class=side-video-list><video-block ng-repeat=\\\"video in vm.results\\\" video-id=\\\"{{ video._id }}\\\" name=\\\"{{ video.name }}\\\" description=\\\"{{ video.description }}\\\" url=video.url ratings=video.ratings></video-block><button class=\\\"btn bnt-lg btn-default btn-show-more\\\" ng-click=vm.showMoreSideVideos()>Show More</button></div></div></div></div>\");\n$templateCache.put(\"app/videoList/videoList.html\",\"<div class=video-list-page><div class=video-list ng-init=vm.onInit()><div class=video-wrapper ng-repeat=\\\"video in vm.videos\\\"><video-block video-id=\\\"{{ video._id }}\\\" name=\\\"{{ video.name }}\\\" description=\\\"{{ video.description }}\\\" url=video.url ratings=video.ratings></video-block></div></div><div id=video-list-end><img class=spinner ng-show=vm.showSpinner src=../../assets/images/spinner.gif alt=\\\"\\\"></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<div class=container-fluid><div class=row><nav class=\\\"navbar navbar-default crossover-navbar\\\"><div class=navbar-header><button type=button class=\\\"navbar-toggle collapsed\\\" data-toggle=collapse data-target=#navbar-collapse aria-expanded=false><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a class=navbar-brand href=/#/videoList><img src=../../../assets/images/header-logo.png alt=Crossover></a></div><div class=\\\"collapse navbar-collapse\\\" id=navbar-collapse><ul class=\\\"nav navbar-nav navbar-right\\\"><li ng-if=!$ctrl.isLogged><a href=/#/login><i class=\\\"fa fa-sign-in\\\" aria-hidden=true></i> Login</a></li><li ng-if=$ctrl.isLogged ng-click=$ctrl.onClickLogout()><a href=\\\"\\\"><i class=\\\"fa fa-sign-out\\\" aria-hidden=true></i> Logout</a></li></ul></div></nav></div></div>\");\n$templateCache.put(\"app/components/videoBlock/videoBlock.html\",\"<div class=video-block ng-init=$ctrl.onInit()><video id=\\\"{{ $ctrl.videoId }}\\\" ng-src=\\\"{{ $ctrl.url }}\\\" preload=none poster=../../../assets/images/default-thumb-small.png class=video-block-el controls></video><div class=video-info><p class=video-name ng-click=$ctrl.goToVideoDetail()>{{ $ctrl.name }}</p><div class=video-rating-wrapper><span class=rating-label>Rating:</span><input-stars allow-half readonly class=average-rating max=5 ng-model=averageRate></input-stars></div><div class=video-description>{{ $ctrl.description | truncateDescription }} <a href=\\\"\\\" ng-click=$ctrl.goToVideoDetail()>Read more</a></div></div></div>\");\n$templateCache.put(\"app/components/videoPlayer/videoPlayer.html\",\"<div class=video-player><video id=\\\"{{ $ctrl.videoId }}\\\" ng-src=\\\"{{ $ctrl.url }}\\\" preload=none poster=../../../assets/images/default-thumb.png class=video-player-el controls></video><div class=video-info><p class=video-name ng-click=$ctrl.goToDetail()>{{ $ctrl.name }}</p><div class=video-rating-wrapper><span class=rating-label>Rating</span><input-stars class=average-rating max=5 on-star-click=$ctrl.onRatingClick() ng-model=videoRating></input-stars></div><div class=video-description-wrapper><span class=description-label>Description:</span><div class=video-description>{{ $ctrl.description }}</div></div></div></div>\");}]);"],"sourceRoot":"/source/"}